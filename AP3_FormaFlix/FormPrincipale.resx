<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4UAAAIMCAIAAADNep5TAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAGf1JREFUeF7t3T+S9MZ1AHDlKkomKfEjKZE0S76YzsAb+AI+AHPFSh0yZMjMGTNm
        voNfEU149gHofoPpwe7av1+9YrFmX/8D8FX3ojHY3wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAb8q///HTf/7pyx8+++q/vvjXJX7+8tvlf3788PV//vmv//Evf26pAAD8HxDrvP/+6789KWL52JoZ
        +e6jj2O5mYp3Irr9j0+/aIXLHhnsL3/527IsjkF9/8mHv//+D63Se6Q6hxHNtZJlqYZhnGgipEoqEb9j
        tML3eOSUDWN7fVaam/Ub0bm24jCmnN1o2fcY/gM8dwYBYOzi+X7r3pXobcQa8a5V6dzBRm2xMG1V16Qa
        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
        h6FUyW7YsgfgWS6e77ei8kcWAXetjWYNtnJnd3dZkHJSHI2lcnMxhtayXxoOeVtwWOTc2ygr7xXaHvxZ
        p6yo0tzpeHw9WtmsP3d2bNkD8Jounu+PRBPFpySXiMVNzO73zo6zBlvZM929YZlyUnTW1ilzG0dlh0OO
        hJb6m+HC8dz1UDn429eaXnx9Vpo7HY+vR5+xWb+wZQ8A/ysm4B8++yqm6ojb75Uvn/z44euYEXcfzQQA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        3pDf/e5/AN7fOwf6aNspAAAAAElFTkSuQmCC
</value>
  </data>
</root>